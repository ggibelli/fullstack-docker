services:
  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
  server:
    image: todo-backend
    build:
      context: ./todo-backend # The context will pick this directory as the "build context"
      dockerfile: ./todo-backend/Dockerfile # This will simply tell which dockerfile to read
    ports:
      - 3000:3000
    container_name: todo-backend-prod
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  app:
    image: todo-frontend
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: ./todo-frontend/Dockerfile # This will simply tell which dockerfile to read
    # environment:
    #   - REACT_APP_BACKEND_URL=http://localhost:8080/api/
    ports:
      - 8081:80
    container_name: todo-frontend-prod # This will name the container hello-front-dev
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-uniq
